{"version":3,"sources":["components/authentication/RegistrationForm.js","history.js","actions/index.js","actions/types.js","components/authentication/AuthButton.js","components/NavBar.js","components/SideBar.js","components/Modal.js","components/authentication/LoginForm.js","components/pages/Login.js","components/pages/Home.js","components/pages/QuizList.js","components/manualQuizForm/MultipleChoice.js","components/manualQuizForm/AddOptions.js","components/manualQuizForm/CreateManualQuizForm.js","components/autoQuizForm/CreateAutoQuizForm.js","components/pages/QuizCreate.js","components/pages/QuizFinish.js","components/pages/QuizStart.js","components/pages/QuizDelete.js","components/pages/QuizEdit.js","components/PrivateRoute.js","components/App.js","reducers/authReducer.js","helpers/shuffleArray.js","reducers/errorReducer.js","reducers/index.js","reducers/quizReducer.js","index.js"],"names":["min","createBrowserHistory","signInUser","formValues","dispatch","a","axios","post","response","localStorage","setItem","data","user","token","type","payload","history","push","getUserProfile","getItem","get","headers","createQuiz","fetchQuiz","id","format","quiz","i","items","length","item","j","options","option","answer","answers","editQuiz","patch","AuthButton","componentDidMount","props","isSignedIn","onSignOutClick","signOutUser","this","className","onClick","sideBarOnclick","to","renderAuthButton","React","Component","connect","state","auth","removeItem","NavBar","sideBarActive","sideBarToggle","SideBar","xmlns","viewBox","x","y","width","height","result","in","dx","dy","stdDeviation","in2","mode","offset","fill","fillOpacity","d","filter","Modal","toggleModal","visibility","ReactDOM","createPortal","onDismiss","e","stopPropagation","title","content","actions","document","querySelector","required","value","undefined","minLength8","email","test","RegistrationForm","onSubmit","createUser","then","input","placeholder","icon","meta","touched","error","autoComplete","handleSubmit","Field","name","component","renderInput","validate","closeForm","form","reduxForm","statusText","console","log","password","LoginForm","showRegform","toggleRegModal","bind","setState","renderRegistrationForm","Login","transform","Home","QuizList","showQuizCreate","fetchQuizzes","Object","keys","quizzes","map","index","key","_id","quizStart","quizName","toggleCreateModal","rows","disabled","size","renderModalContent","renderActions","renderQuizCreate","renderList","values","renderCheckbox","label","warning","checked","renderField","renderOptionList","fields","submitFailed","remove","MultipleChoice","FieldArray","renderSelect","children","onChange","target","selector","formValueSelector","ownProps","optionType","itemNumber","renderLabel","renderOptions","choice","quizId","renderLabeledInput","renderQuestionList","resetSection","reset","FormSection","enableReinitialize","initialValues","CreateAutoQuizForm","renderTextArea","QuizCreate","submitQuizBody","createMethod","match","params","method","questionsInput","removeEmptyLines","questionsForm","split","answerKey","answersForm","choices","choicesPool","curIndex","Math","floor","random","includes","splice","createChoices","questions","question","renderFormActions","renderForm","array","isCorrect","itemAnswer","userAnswers","every","val","renderAnswer","QuizFinish","quizSummary","userScore","userAnswerObj","userAnswer","sort","checkQuizScore","role","tabIndex","starCount","percent","stars","aria-checked","aria-posinset","aria-setsize","star","renderScoreStars","style","pointerEvents","renderQuizSummary","QuizStart","quizFinished","currentNum","fetchShuffledQuiz","renderCheckboxInput","htmlFor","renderEndScreenAction","renderItem","renderActionButtons","QuizDelete","deleteQuiz","renderContent","delete","QuizEdit","PrivateRoute","authed","rest","render","App","toggleShowHide","path","exact","currentUser","INITIAL_STATE","userId","shuffleArray","arr","temp","n","isOpen","combineReducers","formReducer","plugin","registrationForm","action","_","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"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","file":"static/js/main.530393ca.chunk.js","sourcesContent":["import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\n\nimport { createUser } from '../../actions';\nimport '../../styles/registrationform.css';\n\n//VALIDATION\nconst required = value => value ? undefined : 'Required'\nconst minLength = min => value =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\nconst minLength8 = minLength(8)\n\nconst email = value =>\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\n        'Invalid email address' : undefined\n\nclass RegistrationForm extends React.Component {\n\n    onSubmit = async (formValues) => {\n\n        await this.props.createUser(formValues).then(() => {\n            //this.props.closeForm();\n        });\n    }\n\n    renderInput({ input, placeholder, type, icon, meta: { touched, error } }) {\n        return (\n            <div className=\"field\" >\n                <div className=\"ui left icon input\">\n                    <i className={`${icon} icon`} />\n                    <input {...input} type={type} placeholder={placeholder} autoComplete=\"off\" />\n                </div>\n                {touched && (error && <span>{error}</span>)}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <form className=\"ui large form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field name=\"name\" component={this.renderInput} placeholder=\"Name\" type=\"text\" icon=\"user\"\n                    validate={[required]} />\n                <Field name=\"email\" component={this.renderInput} placeholder=\"Email address\" type=\"text\" icon=\"mail\"\n                    validate={[required, email]} />\n                <Field name=\"password\" component={this.renderInput} placeholder=\"Password\" type=\"password\" icon=\"lock\"\n                    validate={[required, minLength8]} />\n                <div className=\"actionButtons\">\n                    <button type=\"button\" className=\"ui fluid large negative submit button\" onClick={this.props.closeForm}>Cancel</button>\n                    <button type=\"submit\" className=\"ui fluid large green submit button\">Signup</button>\n                </div>\n                <div className=\"ui error message\" />\n            </form>\n        );\n    }\n}\n\nconst form = reduxForm({\n    form: 'registrationForm',\n})(RegistrationForm);\n\nexport default connect(null, { createUser })(form);","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import {\n    SET_ERROR,\n    CREATE_USER_SUCCESS,\n    CREATE_USER_ERROR,\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_QUIZ,\n    FETCH_QUIZZES,\n    FETCH_QUIZ,\n    FETCH_SHUFFLED_QUIZ,\n    EDIT_QUIZ,\n    DELETE_QUIZ,\n    HIDE_ERROR\n} from '../actions/types';\nimport history from '../history';\nimport axios from 'axios';\n\n\n\n/**\n *  ERROR HANDLING\n */\n\nexport const setError = error => async dispatch => {\n    dispatch({ type: SET_ERROR, error: error });\n}\n\nexport const hideError = () => async dispatch => {\n    dispatch({ type: HIDE_ERROR });\n}\n\n/**\n * CRUD FOR USER ACCOUNT\n */\n\nexport const createUser = formValues => async dispatch => {\n    try {\n        let response = await axios.post('/users', formValues);\n\n        if (response.statusText === \"OK\") {\n            console.log('OKAY!')\n            dispatch({ type: CREATE_USER_SUCCESS, payload: response.data, error: null });\n        } else {\n            console.log('Error?')\n            // if internally there are errors\n            // pass on the error, in a correct implementation\n            // such errors should throw an HTTP 4xx or 5xx error\n            // so that it directs straight to the catch block\n            dispatch({ type: CREATE_USER_ERROR, payload: null, error: response.error });\n        }\n        signInUser({ email: formValues.email, password: formValues.password })\n    } catch (e) {\n        dispatch({ type: CREATE_USER_ERROR, payload: null, error: e.response.data.error });\n    }\n};\n\nexport const signInUser = formValues => async dispatch => {\n    const response = await axios.post('/users/login', formValues);\n\n    localStorage.setItem('user', response.data.user)\n    localStorage.setItem('token', response.data.token);\n    dispatch({ type: SIGN_IN, payload: response.data.user });\n    history.push('/quizlist');\n};\n\nexport const signOutUser = () => async dispatch => {\n    const token = localStorage.getItem('token');\n    await axios.post('/users/logout', null, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n    dispatch({ type: SIGN_OUT });\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    history.push('/login');\n};\n\n\nexport const getUserProfile = () => async dispatch => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        const response = await axios.get('/users/me', { headers: { 'Authorization': `Bearer ${token}` } });\n        dispatch({ type: SIGN_IN, payload: response.data });\n    }\n};\n\n/**\n * CRUD FOR QUIZZES\n */\nexport const createQuiz = formValues => async dispatch => {\n    const token = localStorage.getItem('token');\n\n    const response = await axios.post('/quiz',\n        formValues, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    }\n    );\n    dispatch({ type: CREATE_QUIZ, payload: response.data });\n    //Do some programmatic navigation to automatically bring the user back to the list of streams\n    history.push('/quizlist');\n};\n\nexport const fetchQuizzes = () => async dispatch => {\n    const token = localStorage.getItem('token');\n\n    const response = await axios.get('/quiz', {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n    dispatch({ type: FETCH_QUIZZES, payload: response.data });\n};\n\nexport const fetchQuiz = (id, format) => async dispatch => {\n    const token = localStorage.getItem('token');\n\n    const response = await axios.get(`/quiz/${id}`, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n\n    if (format) {\n        let quiz = response.data\n        // Fix format of quiz for form value initialization\n        for (let i = 0; i < quiz.items.length; i++) {\n            const item = quiz.items[i];\n            for (let j = 0; j < item.options.length; j++) {\n                let option = item.options[j];\n                // Add answers property\n                quiz.items[i].options[j] = {\n                    answer: item.answers[j] === option ? true : false,\n                    option: option\n                }\n            }\n            delete quiz.items[i].answers\n        }\n        dispatch({ type: FETCH_QUIZ, payload: response.data });\n    } else {\n        dispatch({ type: FETCH_QUIZ, payload: response.data });\n    }\n\n};\n\nexport const fetchShuffledQuiz = id => async dispatch => {\n    const token = localStorage.getItem('token');\n\n    const response = await axios.get(`/quiz/${id}`, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n    dispatch({ type: FETCH_SHUFFLED_QUIZ, payload: response.data });\n};\n\nexport const editQuiz = (id, formValues) => async dispatch => {\n    const token = localStorage.getItem('token');\n\n    const response = await axios.patch(\n        `/quiz/${id}`,\n        formValues, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n\n    dispatch({ type: EDIT_QUIZ, payload: response.data });\n    history.push('/quizlist');\n};\n\nexport const deleteQuiz = id => async dispatch => {\n    const token = localStorage.getItem('token');\n\n    await axios.delete(`/quiz/${id}`, {\n        headers: {\n            'Authorization': `Bearer ${token}`\n        }\n    });\n\n    dispatch({ type: DELETE_QUIZ, payload: id });\n    history.push('/quizlist');\n};\n","export const CREATE_USER = 'CREATE_USER';\nexport const CREATE_USER_REQUEST = 'CREATE_USER_REQUEST';\nexport const CREATE_USER_SUCCESS = 'CREATE_USER_SUCCESS';\nexport const CREATE_USER_ERROR = 'CREATE_USER_ERROR';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_QUIZ = 'CREATE_QUIZ';\nexport const FETCH_QUIZZES = 'FETCH_QUIZZES';\nexport const FETCH_QUIZ = 'FETCH_QUIZ';\nexport const FETCH_SHUFFLED_QUIZ = 'FETCH_SHUFFLED_QUIZ';\nexport const EDIT_QUIZ = 'EDIT_QUIZ';\nexport const DELETE_QUIZ = 'DELETE_QUIZ';\n\nexport const SET_ERROR = \"SET_ERROR\";\nexport const HIDE_ERROR = \"HIDE_ERROR\";\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { signOutUser, getUserProfile } from '../../actions';\n\nimport '../../styles/navbar.css';\n\nclass AuthButton extends React.Component {\n\n    componentDidMount = () => {\n        if (this.props.isSignedIn) {\n            this.props.getUserProfile();\n        }\n    }\n\n    onSignOutClick = () => {\n        this.props.signOutUser();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn) {\n            return (\n                <li className=\"dropdown_item\" onClick={() => {\n                    this.props.sideBarOnclick()\n                    this.onSignOutClick()\n                }}>Sign Out</li>\n            )\n        } else {\n            return (\n                <li className=\"dropdown_item\"\n                ><Link to=\"/login\">Login</Link>\n                </li>\n\n            )\n        }\n    }\n    render() {\n        return (\n            <>\n                {this.renderAuthButton()}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn };\n}\n\nexport default connect(mapStateToProps, { signOutUser, getUserProfile })(AuthButton);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/navbar.css'\n\nimport AuthButton from './authentication/AuthButton';\n\nclass NavBar extends React.Component {\n\n    render() {\n        if (!this.props.isSignedIn) {\n            return null\n        }\n\n        return (\n            <ul className={this.props.sideBarActive ? \"nav navColorChange\" : \"nav\"}>\n                <div className=\"burgerMenu\" type=\"button\" onClick={this.props.sideBarToggle}>\n                    <div className=\"bar1\"></div>\n                    <div className=\"bar2\"></div>\n                    <div className=\"bar3\"></div>\n                </div>\n                <Link to=\"/\" className={this.props.sideBarActive ? \"home_button logoColorChange\" : \"home_button\"}>\n                    <i className=\"ui pencil large icon\"></i>\n                    STUDY AID\n                </Link>\n                <li className=\"dropdown\">\n                    <div className=\"dropdownAcc_button\">\n                        <span className=\"dropdownAcc_name\">Account Settings</span>\n                        <i className=\"ui icon user\"></i>\n                    </div>\n                    <div className=\"dropdown-content\">\n                        <ul className=\"dropdown_menu\">\n                            <li className=\"dropdown_item\">Your Profile</li>\n                            <li className=\"dropdown_item\">Your Dashboard</li>\n                            <AuthButton sideBarOnclick={this.props.sideBarToggle} />\n                        </ul>\n                    </div>\n                </li>\n            </ul>\n        );\n    }\n}\n\nexport default NavBar;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport '../styles/sidebar.css'\n\nclass SideBar extends React.Component {\n\n    render() {\n        return (\n            <div id=\"mySidebar\" className={this.props.sideBarActive ? \"sidebar sidebarActive\" : \"sidebar\"}>\n                <div className={this.props.sideBarActive ? \"sidebarLogo logoColorChange\" : \"sidebarLogo\"}>\n                    <i className=\"ui pencil large icon\"></i>\n                    STUDY AID\n                </div>\n                <div className=\"hideBut\" onClick={this.props.sideBarToggle}>\n                    <i className=\"ui window close large icon\"></i>\n                </div>\n                <div className=\"curve\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"150 175.5 300 205\">\n                        <defs>\n                            <filter id=\"shadow\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\n                                <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"1\" dy=\"1\" />\n                                <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"10\" />\n                                <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                            </filter>\n                            <linearGradient id=\"gradient\">\n                                <stop className=\"main-stop\" offset=\"0%\" />\n                                <stop className=\"alt-stop\" offset=\"100%\" />\n                            </linearGradient>\n                        </defs>\n                        <path fill=\"url(#gradient)\" fillOpacity=\"1\" d=\"M 100 350 Q 100 250 100 150 Q 250 150 450 150 Q 450 200 450 250 C 300 250 350 400 100 350\" filter=\"url(#shadow)\"></path>\n                    </svg>\n                </div>\n                <ul className=\"sideNav_content\">\n                    <Link to=\"/\"><li className=\"sideNav_item\">Home</li></Link>\n                    <Link to=\"/quizlist\"><li className=\"sideNav_item\">Quiz List</li></Link>\n                    <li className=\"sideNav_item\">Cue Cards</li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default SideBar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../styles/modal.css';\n\nconst Modal = props => {\n    const toggleModal = props.visibility ? \"modal modal-active\" : \"modal\";\n    return ReactDOM.createPortal(\n        <div className={toggleModal} onClick={props.onDismiss}>\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                <div className=\"header\">\n                    <h1>{props.title}</h1>\n                </div>\n                <div className=\"content\">\n                    {props.content}\n                </div>\n                <div className=\"actions\">\n                    {props.actions}\n                </div>\n            </div>\n        </div >,\n        document.querySelector('#modal')\n    );\n};\nexport default Modal;","import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\n\nimport { signInUser } from '../../actions';\nimport Modal from '../Modal';\nimport RegistrationForm from '../authentication/RegistrationForm';\n\nclass LoginForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showRegform: false\n        };\n    }\n\n    onSubmit = async (formValues) => {\n        await this.props.signInUser(formValues).then(() => this.props.sideBarToggle())\n    }\n\n    renderInput({ input, placeholder, type, icon }) {\n        return (\n            <div className=\"field\">\n                <div className=\"ui left icon input\">\n                    <i className={`${icon} icon`} />\n                    <input {...input} type={type} placeholder={placeholder} autoComplete=\"off\" />\n                </div>\n            </div>\n        );\n    }\n\n    // Modal\n\n    renderRegistrationForm() {\n        return <Modal\n            title={<h2>Sign Up</h2>}\n            visibility={this.state.showRegform}\n            content={<RegistrationForm closeForm={this.toggleRegModal.bind(this)} />}\n            onDismiss={this.toggleRegModal.bind(this)}\n        />\n    }\n\n    toggleRegModal() {\n        this.setState(state => ({ showRegform: !state.showRegform }))\n    }\n\n    render() {\n        return (\n            <>\n                {this.renderRegistrationForm()}\n                <form className=\"ui large form\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <div className=\"\">\n                        <Field name=\"email\" component={this.renderInput} placeholder=\"Email address\" type=\"text\" icon=\"mail\" />\n                        <Field name=\"password\" component={this.renderInput} placeholder=\"Password\" type=\"password\" icon=\"lock\" />\n                        <div className=\"ui right aligned container\">\n                            {/*Button to show registration modal */}\n                            <button className=\"ui large teal submit button\" type=\"button\" onClick={this.toggleRegModal.bind(this)}>Sign Up</button>\n                            {/* <Link className=\"ui large teal submit button\" to=\"/registration\">Sign Up</Link> */}\n                            <button className=\"ui large teal submit button\">Login</button>\n                        </div>\n                    </div>\n                    <div className=\"ui error message\" />\n                </form>\n            </>\n        );\n    }\n}\n\nconst form = reduxForm({\n    form: 'loginForm',\n})(LoginForm);\n\nexport default connect(null, { signInUser })(form);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport history from '../../history';\nimport LoginForm from '../authentication/LoginForm';\nimport '../../styles/login.css'\n\n\nclass Login extends React.Component {\n    componentDidMount() {\n        const token = localStorage.getItem('token');\n        if (token) {\n            history.push('/')\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"loginWrapper\">\n                <div className=\"loginContent\">\n                    <div className=\"loginBox\">\n                        <h1 className=\"loginHeader\">\n                            LOGIN\n                        </h1>\n                        <LoginForm onSubmit={this.onSubmit} sideBarToggle={this.props.sideBarToggle} />\n                    </div>\n                </div >\n                <div className=\"loginBackground\">\n                    <svg className=\"curve-topleft\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"150 175.5 1250 205\">\n                        <defs>\n                            <filter id=\"shadow\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\n                                <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"1\" dy=\"1\" />\n                                <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"10\" />\n                                <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                            </filter>\n                            <linearGradient id=\"gradient\">\n                                <stop className=\"main-stop\" offset=\"0%\" />\n                                <stop className=\"alt-stop\" offset=\"100%\" />\n                            </linearGradient>\n                        </defs>\n                        <path fill=\"url(#gradient)\" fillOpacity=\"1\" d=\"M 100 350 Q 100 250 100 150 Q 250 150 450 150 Q 450 200 450 150 C 300 250 350 400 100 350\" filter=\"url(#shadow)\"></path>\n                    </svg>\n                    <svg className=\"curve-bottomright\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"150 175.5 1250 205\">\n                        <defs>\n\n                            <filter id=\"shadow\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\n                                <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"1\" dy=\"1\" />\n                                <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"10\" />\n                                <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n                            </filter>\n                            <linearGradient id=\"gradient\">\n                                <stop className=\"main-stop\" offset=\"0%\" />\n                                <stop className=\"alt-stop\" offset=\"100%\" />\n                            </linearGradient>\n                        </defs>\n                        <path fill=\"url(#gradient)\" fillOpacity=\"1\" d=\"M 100 350 Q 100 250 100 150 Q 250 150 450 150 Q 450 200 450 150 C 300 250 350 400 100 350\" filter=\"url(#shadow)\" transform=\"rotate(180 1030 280)\n                translate(500 0)\">></path>\n                    </svg>\n                </div>\n            </div>\n        );\n    }\n}\n\n/*  */\n\nexport default connect(null, {})(Login);","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div className=\"ui container\">\n            Home\n        </div>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Modal from '../Modal';\nimport { fetchQuizzes } from '../../actions';\nimport '../../styles/quizList.css'\nimport history from '../../history';\n\nclass QuizList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showQuizCreate: false\n        }\n    }\n    componentDidMount() {\n        this.props.fetchQuizzes();\n    }\n\n    quizStart(id) {\n        history.push(`/quiz/start/${id}`)\n    }\n\n    // QUIZZES LIST\n    renderList() {\n        if (Object.keys(this.props.quizzes).length !== 0) {\n            return this.props.quizzes.map((quiz, index) => {\n                if (index % 6 === 0) {\n\n                }\n                return (\n                    <div className=\"four wide column setCard\" key={quiz._id} onClick={() => this.quizStart(quiz._id)}>\n                        <div className=\"ui simple icon bottom right floated dropdown button\" onClick={(e) => e.stopPropagation()}>\n                            <i className=\"ellipsis vertical icon\"></i>\n                            <div className=\"menu\" >\n                                <Link to={`/quiz/edit/${quiz._id}`} className=\"item\">\n                                    <i className=\"edit icon\"></i>\n                                    Edit\n                                    </Link>\n                                <Link to={`/quiz/delete/${quiz._id}`} className=\"item\">\n                                    <i className=\"trash alternate icon\"></i>\n                                    Delete\n                                    </Link>\n                            </div>\n                        </div>\n                        <h3 className=\"setCard_title noselect\" id={quiz.quizName} >{quiz.quizName} </h3>\n                    </div>\n                );\n            });\n        } \n    }\n\n    // CREATE QUIZ CHOICES MODAL\n    toggleCreateModal() {\n        this.setState(state => ({ showQuizCreate: !state.showQuizCreate }))\n    }\n\n    renderModalContent() {\n        return (\n            <div className=\"ui two cards\">\n                <Link to={\"/quiz/create/auto\"} >\n                    <div className=\"ui link card\" onClick={this.toggleCreateModal.bind(this)}>\n                        <div className=\"content\">\n                            <div className=\"header\">\n                                Automatic\n                            </div>\n                            <div className=\"ui form\">\n                                <div className=\"field\">\n                                    <label>Questions</label>\n                                    <textarea rows=\"3\" disabled></textarea>\n                                </div>\n                                <div className=\"field\">\n                                    <label>Answers</label>\n                                    <textarea rows=\"3\" disabled></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"extra content\">\n                            <div className=\"description\">\n                                Automatic is as simple as copy pasting as options will automatically generated by using the provided answers.\n                            <br />\n                            Minimum questions with answer: 4.\n                        </div>\n                        </div>\n                    </div>\n                </Link>\n                <Link to=\"/quiz/create/manual\">\n                    <div className=\"ui link card\" onClick={this.toggleCreateModal.bind(this)}>\n                        <div className=\"content\">\n                            <div className=\"header\">\n                                Manual\n                         </div>\n                            <div className=\"ui card\">\n                                <div className=\"content\">\n                                    <label>Question 1: </label>\n                                    <div className=\"field\">\n                                        <input\n                                            autoComplete=\"off\"\n                                            size=\"32\"\n                                            disabled\n                                        />\n                                    </div>\n                                    <label>Options:</label>\n                                    <div className=\"ui internally celled grid\">\n                                        <div className=\"row\">\n                                            <div className=\"eight wide column\">\n                                                <div className=\"field\">\n                                                    <input\n                                                        autoComplete=\"off\"\n                                                        size=\"10\"\n                                                        disabled\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"eight wide column\">\n                                                <div className=\"field\">\n                                                    <input\n                                                        autoComplete=\"off\"\n                                                        size=\"10\"\n                                                        disabled\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"eight wide column\">\n                                                <div className=\"field\">\n                                                    <input\n                                                        autoComplete=\"off\"\n                                                        size=\"10\"\n                                                        disabled\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"eight wide column\">\n                                                <div className=\"field\">\n                                                    <input\n                                                        autoComplete=\"off\"\n                                                        size=\"10\"\n                                                        disabled\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"extra content\">\n                            <div className=\"description\">\n                                Manual lets you put your own options on each question for a more personalized quiz.\n                            <br />\n                            No minimum questions!\n                        </div>\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n\n    renderActions() {\n        return (\n            <div className=\"ui right floated buttons\">\n                <button type=\"button\" onClick={this.toggleCreateModal.bind(this)} className=\"ui button\">Cancel</button>;\n            </div>\n        )\n    }\n\n    renderQuizCreate() {\n        return <Modal\n            title=\"Choose how you create your quiz!\"\n            visibility={this.state.showQuizCreate}\n            content={this.renderModalContent()}\n            actions={this.renderActions()}\n            onDismiss={this.toggleCreateModal.bind(this)}\n        />\n    }\n\n    render() {\n        return (\n            <div className=\"quizList-container\">\n                {this.renderQuizCreate()}\n                <div className=\"ui container\">\n                    <h2 className=\"ui header\" id=\"quizListheader\">\n                        <i className=\"book icon\"></i>\n                        <div className=\"content\">\n                            Quiz List\n                    <div className=\"sub header\">Start or Create a Quiz</div>\n                        </div>\n                    </h2>\n                    <div className=\"ui grid quizSet-container\">\n                        {this.renderList()}\n                        <div onClick={this.toggleCreateModal.bind(this)} className=\"four wide column setCard\">\n                            <div className=\"ui container\">\n                                <i className=\"green plus circle big icon\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        quizzes: Object.values(state.quiz)\n    }\n};\n\nexport default connect(mapStateToProps, { fetchQuizzes })(QuizList);","import React from 'react';\nimport { Field, FieldArray } from 'redux-form';\n\nimport '../../styles/quizCreate.css';\n\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required');\n\nconst renderCheckbox = ({ input, label, type, meta: { touched, error, warning } }) => {\n    return (\n        <label className=\"ui checkbox-container\">\n            <input {...input} placeholder={label} type={type} checked={input.checked} />\n            <span className=\"checkmark\"><i className={`check icon`}></i></span>\n        </label>\n    );\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => {\n    return <input {...input}\n        type={type}\n        placeholder={label}\n        autoComplete=\"off\"\n    />\n}\n\nconst renderOptionList = ({ fields, meta: { touched, error, submitFailed } }) => {\n    return <ul id=\"multiplechoice-list\">\n        {fields.map((option, index) =>\n            <li id=\"option-container\" key={index}>\n                <Field\n                    name={`${option}.answer`}\n                    component={renderCheckbox}\n                    type=\"checkbox\"\n                />\n                <Field\n                    name={`${option}.option`}\n                    component={renderField}\n                    label=\"Option\"\n                    validate={[required]}\n                />\n                <button\n                    type=\"button\"\n                    className=\"ui right attached icon button\"\n                    onClick={() => {\n                        fields.remove(index)\n                    }}\n                >\n                    <i className=\"trash icon\"></i>\n                </button>\n            </li>\n        )}\n        <li>\n            <button\n                type=\"button\"\n                className=\"ui blue basic button\"\n                id=\"addOption-btn\"\n            onClick={() => fields.push({})}\n            >Add Option\n                </button>\n        </li>\n    </ul>\n}\n\nconst MultipleChoice = () => {\n    return <FieldArray name={`options`} component={renderOptionList} />\n}\n\nexport default MultipleChoice;\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, formValueSelector } from 'redux-form';\nimport MultipleChoice from './MultipleChoice';\nimport '../../styles/quizCreate.css';\n\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required');\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => {\n    return <input {...input}\n        type={type}\n        placeholder={label}\n        autoComplete=\"off\"\n    />\n}\n\nconst renderOptions = (type) => {\n    switch (type) {\n        case 'multiplechoice':\n            return <MultipleChoice/>\n        case 'patternmatch':\n            return <Field\n                name={`options[0].option`}\n                component={renderField}\n                label=\"Answer:\"\n                validate={[required]}\n            />\n        default:\n            return <Field name=\"optionType\" component={renderSelect} label=\"dropDownSelect\" >\n                <option label=\"Multiple Choice\" value=\"multiplechoice\"></option>\n                <option label=\"Pattern Match\" value=\"patternmatch\"></option>\n            </Field>\n    }\n}\n\nconst renderLabel = (type) => {\n\n    switch (type) {\n        case 'multiplechoice':\n            return <label>Options:</label>\n        case 'patternmatch':\n            return <label>Answer:</label>\n        default:\n            return <></>\n    }\n}\n\nconst renderSelect = ({ input, children }) => {\n    return (\n        <select className=\"optionType-select\" {...input} onChange={(e) => {\n            input.onChange(e.target.value)\n        }} value={input.value}>\n            <option value=\"\">Option Type</option>\n            {children.map(({ props }, index) => <option key={index} value={props.value} >{props.label}</option> )}\n        </select>\n    )\n}\n \nconst AddOptions = (props) => {\n    return (\n        <div className=\"options-wrapper\">\n            {renderLabel(props.optionType)}\n            {renderOptions(props.optionType)}  \n        </div>\n    )\n}\n\n// Decorate with connect to read form values\nconst selector = formValueSelector('manualQuizForm') // <-- same as form name\n\nconst mapStateToProps = (state, ownProps) => {\n    const optionType = selector(state, `${ownProps.itemNumber}.optionType`)\n    return { optionType };\n};\n\nexport default connect(mapStateToProps)(AddOptions);","import React from 'react';\nimport { reduxForm, Field, FieldArray, FormSection, reset } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createQuiz, editQuiz } from '../../actions';\n\nimport AddOptions from './AddOptions';\nimport '../../styles/quizCreate.css';\n\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required');\n\nconst onSubmit = (values, dispatch, props) => {\n    for (let index = 0; index < values.items.length; index++) {\n        const item = values.items[index]\n        item.answers = []\n\n        if (item.optionType === 'multiplechoice') {\n            // Populate answers array\n            for (let index = 0; index < item.options.length; index++) {\n                const choice = item.options[index];\n                if (choice.answer === true) {\n                    item.answers.push(choice.option)\n                }\n                item.options[index] = choice.option\n            }\n        } else if (item.optionType === 'patternmatch') {\n            item.answers[0] = item.options[0].option\n            item.options[0] = item.options[0].option\n        }\n    }\n\n    if (props.quizId) {\n        props.editQuiz(props.quizId, values)\n    } else {\n        props.createQuiz(values)\n    }\n}\n\nconst renderLabeledInput = ({ input, label, placeholder, meta: { touched, error } }) => {\n    const className = `ui labeled field input ${touched && error ? 'error' : ''}`\n    return (\n        <div className={className}>\n            <div className=\"ui label\">\n                {label}\n            </div>\n            <input\n                {...input}\n                placeholder={placeholder}\n                size=\"30\"\n            />\n        </div>\n    );\n}\n\nconst renderField = ({ input, label, type }) => {\n    return (\n        <div className={\"question-wrapper\"}>\n            <label>{label}</label>\n            <input {...input}\n                type={type}\n                placeholder={label}\n                autoComplete=\"off\"\n                size=\"10\"\n            />\n        </div>\n    )\n}\n\nconst renderQuestionList = ({ fields, resetSection }) => {\n    return <ul id=\"item-list\">\n        {fields.map((item, index) =>\n            <li className=\"ui card\" id=\"item-container\" key={index}>\n                <div className=\"item-header\">\n                    <label>Question {index + 1}</label>\n                    <button\n                        type=\"button\"\n                        className=\"ui negative button\"\n                        onClick={() => {\n                            fields.remove(index)\n                            reset()\n                        }}\n                    >Delete Question</button>\n                </div>\n                <FormSection className=\"item-content\" name={`${item}`}>\n                    <Field\n                        name={`question`}\n                        component={renderField}\n                        label=\"Question:\"\n                        validate={[required]}\n                    />\n                    <AddOptions itemNumber={item}/>\n                </FormSection>\n            </li>\n        )}\n        <li>\n            <button\n                type=\"button\"\n                className=\"ui green basic button\"\n                id=\"addItem-btn\"\n                onClick={() => fields.push({})}\n            >Add Item\n                </button>\n        </li>\n    </ul>\n}\n\nconst CreateManualQuizForm = ({ handleSubmit, actions, resetSection }) => {\n    return (\n        <form className=\"ui form\" onSubmit={handleSubmit(onSubmit)} >\n            <div className=\"ui segment form\">\n                <Field\n                    name=\"quizName\"\n                    component={renderLabeledInput}\n                    label=\"Quiz: \"\n                    placeholder=\"QUIZ NAME\"\n                    validate={[required]}\n                />\n            </div>\n            {/* Form Card */}\n            <div className=\"ui card container fluid\" >\n                <div className=\"content items-wrapper\">\n                    <FieldArray name=\"items\" component={renderQuestionList} resetSection={resetSection} />\n                </div>\n                <div className=\"extra content\">\n                    {actions}\n                </div>\n            </div>\n        </form>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    if (ownProps.quiz) {\n        return {\n            initialValues: ownProps.quiz\n        }\n    } else {\n        return {}\n    }\n};\n\nconst form = reduxForm({\n    form: 'manualQuizForm',\n    enableReinitialize: true\n})(CreateManualQuizForm);\n\nexport default connect(mapStateToProps, { createQuiz, editQuiz })(form);\n","import React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\n\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required');\n\nclass CreateAutoQuizForm extends React.Component {\n\n    onSubmit = formValues => {\n        this.props.onSubmit(formValues);\n    }\n\n    renderLabeledInput({ input, label, placeholder, meta: { touched, error } }) {\n        //const className = `ui labeled field input ${touched && error ? 'error' : ''}`\n        return (\n            <div className=\"ui labeled field input\">\n                <div className=\"ui label\">\n                    {label}\n                </div>\n                <input {...input} placeholder={placeholder}\n                />\n            </div>\n        );\n    }\n\n    renderTextArea({ input, label, placeholder, meta: { touched, error, warning } }) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <textarea {...input} placeholder={placeholder} rows=\"15\" />\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n            <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.onSubmit)} >\n                <div className=\"ui form segment\">\n                    <Field\n                        name=\"quizName\"\n                        component={this.renderLabeledInput}\n                        label=\"Quiz: \"\n                        placeholder=\"Put your quiz name here\"\n                        validate={[required]}\n                    />\n                </div>\n                <div className=\"ui form segment\">\n                    <Field\n                        name=\"questionsForm\"\n                        component={this.renderTextArea}\n                        label=\"Questions: \"\n                        placeholder=\"Put your questions here\"\n                        validate={[required]}\n                    />\n                    <Field\n                        name=\"answersForm\"\n                        component={this.renderTextArea}\n                        label=\"Answers: \"\n                        placeholder=\"Put your answers here\"\n                        validate={[required]}\n                    />\n                    {this.props.actions}\n                </div>\n            </form>\n        )\n    }\n}\n\nconst form = reduxForm({\n    form: 'autoQuizForm'\n})(CreateAutoQuizForm);\n\nexport default connect(null, {})(form);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { createQuiz } from '../../actions';\nimport CreateManualQuizForm from '../manualQuizForm/CreateManualQuizForm';\nimport CreateAutoQuizForm from '../autoQuizForm/CreateAutoQuizForm';\n\nclass QuizCreate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            createMethod: this.props.match.params.method\n        }\n    }\n\n    submitQuizBody(formValues) {\n        if (this.state.createMethod === 'manual') {\n            for (let index = 0; index < formValues.items.length; index++) {\n                const item = formValues.items[index];\n                item.answer = item.options[0];\n            }\n            this.props.createQuiz(formValues);\n        } else if (this.state.createMethod === 'auto') {\n            let questionsInput = removeEmptyLines(formValues.questionsForm.split(/\\n/));\n            let answerKey = removeEmptyLines(formValues.answersForm.split(/\\n/));\n            let choices = createChoices(answerKey);\n            let questions = [];\n\n            for (let index = 0; index < questionsInput.length; index++) {\n                let question = {\n                    question: questionsInput[index],\n                    answer: answerKey[index],\n                    options: choices[index]\n                };\n                questions.push(question);\n            }\n            let quiz = {\n                quizName: formValues.quizName,\n                questions: questions\n            }\n            this.props.createQuiz(quiz);\n        }\n    }\n\n    onSubmit = formValues => {\n        this.submitQuizBody(formValues);\n    }\n\n    renderFormActions() {\n        return (\n            <div className=\"ui right floated buttons\">\n                <button type=\"submit\" className=\"ui green button\">Create</button>\n                <div className=\"or\"></div>\n                <Link to=\"/quizlist\" className=\"ui button\">\n                    Cancel\n                </Link>\n            </div>\n        );\n    }\n\n    renderForm() {\n        if (this.state.createMethod === 'manual') {\n            return <CreateManualQuizForm actions={this.renderFormActions()} />;\n        } else if (this.state.createMethod === 'auto') {\n            return <CreateAutoQuizForm actions={this.renderFormActions()} onSubmit={this.onSubmit} />;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"quizCreate-container\">\n                {this.renderForm()}\n            </div>\n        )\n    }\n};\n\nfunction removeEmptyLines(array) {\n    for (let index = 0; index < array.length;) {\n        const element = array[index];\n        if (element === \"\") {\n            array.splice(index, 1);\n        } else {\n            index++;\n        }\n    }\n    return array;\n}\n\nfunction createChoices(answerKey) {\n    const choicesPool = [];\n\n    // Push copies of the answer key to the choices pool for each number of question\n    for (let index = 0; index < answerKey.length; index++) {\n        choicesPool.push([...answerKey])\n    }\n\n    // Randomly remove elements from the choices array until 4 are left including the right answer\n    for (var i = 0; i <= choicesPool.length - 1; i++) {\n        // Set the choices as the 4 choices for the current answer index\n        let choices = choicesPool[i];\n\n        // Randomly remove elements\n        // If there are 4 left then stop removing\n        while (choices.length !== 4) {\n            // Randomly choose an index \n            let curIndex = Math.floor(Math.random() * choices.length)\n\n            // If the randomly chosen element is NOT the answer then remove it\n            // OR If the randomly chosen element IS the answer but the pool already includes the answer then remove it\n            if ((choices[curIndex] !== answerKey[i]) || choices.includes(answerKey[i])) {\n                choices.splice(curIndex, 1);\n            }\n        }\n\n        // Check if there are duplicates on each choices pool\n    }\n    return choicesPool;\n}\n\nexport default connect(null, { createQuiz })(QuizCreate);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Count total score and create a list of correct and wrong answers\nconst isCorrect = (itemAnswer, userAnswers) => {\n    return (itemAnswer.length === userAnswers.length) && (itemAnswer.every(val => userAnswers.includes(val)));;\n}\n\nconst renderAnswer = (type, answers) => {\n    switch (type) {\n        case 'item':\n            return <>\n                {answers.length > 1 ? 'Correct answers: ' : 'Correct answer: '}\n                {answers.map((answer, index) => {\n                    if (index !== 0) {\n                        return `, ${answer}`\n                    } else {\n                        return `${answer}`\n                    }\n                })}\n            </>\n        case 'user':\n            return <>\n                {answers.length > 1 ? 'Your answers: ' : 'Your answer: '}\n                {answers.map((answer, index) => {\n                    if (index !== 0) {\n                        return `, ${answer}`\n                    } else {\n                        return `${answer}`\n                    }\n                })}\n            </>\n        default:\n            break;\n    }\n}\n\nconst checkQuizScore = (items, userAnswers, quizSummary) => {\n\n    let userScore = 0;\n\n    for (let index = 0; index < items.length; index++) {\n        const item = items[index]\n        const userAnswerObj = userAnswers.item[index].userAnswer\n        const itemAnswer = item.answers\n        let userAnswer = []\n\n        console.log(item.optionType);\n        if (item.optionType === 'multiplechoice') {\n            for (const answer in userAnswerObj) {\n                if (userAnswerObj[answer] === false) delete userAnswerObj[answer];\n            }\n            userAnswer = Object.keys(userAnswerObj).sort()\n        } else if (item.optionType === 'patternmatch') {\n            userAnswer.push(userAnswerObj.userAnswer)\n        }\n\n        if (isCorrect(itemAnswer, userAnswer)) {\n            userScore++;\n            quizSummary.push(\n                <>\n                    <div className=\"content\">\n                        <h3 className=\"ui header\">\n                            <div className=\"content\">\n                                <div className=\"sub header\">\n                                    Question {index + 1}\n                                    <i className=\"green check icon\"></i>\n                                </div>\n                                {item.question}\n                            </div>\n                        </h3>\n                        <div className=\"description\">\n                            {userAnswers[index]}\n                        </div>\n                        <div>Question Type: {item.optionType}</div>\n                        <div>{renderAnswer('item', itemAnswer)}</div>\n                    </div>\n                </>\n            )\n        } else {\n            quizSummary.push(\n            <>\n                <div className=\"content\">\n                    <h3 className=\"ui header\">\n                            <div className=\"content\">\n                                <div className=\"sub header\">\n                                    Question {index + 1}\n                                    <i className=\"red close icon\"></i>\n                                </div>\n                            {item.question}\n                        </div>\n                    </h3>\n                    <div className=\"description\">\n                        {userAnswers[index]}\n                    </div>\n                    <div className=\"extra content\">\n                            <div>{renderAnswer('user', userAnswer)}</div>\n                            <div>{renderAnswer('item', itemAnswer)}</div>\n                    </div>\n                </div>\n            </>\n        )\n        }\n    }\n    return userScore\n}\n\nconst renderScoreStars = (items, userScore) => {\n    let numOfItems = items.length;\n    // Calculate Score Precent\n    let percent = (userScore / numOfItems) * 100;\n    // Determine number of active stars \n    let starCount;\n\n    if (percent === 100) {\n        starCount = 3;\n    } else if (percent >= 50) {\n        starCount = 2;\n    } else {\n        starCount = 1\n    }\n\n    // Create an array of star elements\n    let stars = [];\n\n    for (let index = 1; index <= 3; index++) {\n        let checked = \"false\";\n        let className = \"icon\";\n\n        if (starCount !== 0) {\n            checked = \"true\"\n            className = \"active icon\"\n            starCount--;\n        }\n\n        stars.push(\n            <i\n                tabIndex=\"0\"\n                aria-checked={checked}\n                aria-posinset=\"1\"\n                aria-setsize=\"3\"\n                className={className}\n                role=\"radio\"\n            ></i>\n        )\n    }\n\n    // Return and render the stars\n    return stars.map((star, index) => (\n        <div key={index}>{star}</div>\n    ));\n}\n\nconst renderQuizSummary = (quizSummary) => {\n    return quizSummary.map((item, index) => (\n        <div style={{ pointerEvents: \"none\" }} className=\"item\" key={index}>{item}</div>\n    ));\n}\n\n\nconst QuizFinish = ({ quiz, userAnswers }) => {\n    let quizSummary = [];\n    let userScore = checkQuizScore(quiz.items, userAnswers, quizSummary);\n    return (\n        <div className=\"ui container\">\n            <div className=\"ui center aligned content container\">\n                <h1>\n                    {userScore}/\n                    {quiz.items.length}\n                </h1>\n                <div className=\"ui disabled massive star rating\" role=\"radiogroup\" tabIndex=\"-1\">\n                    {renderScoreStars(quiz.items, userScore)}\n                </div>\n            </div>\n            <div className=\"ui divided items\">\n                {renderQuizSummary(quizSummary)}\n                <Link to=\"/quizlist\" className=\"ui green button\">\n                    Back to Quiz List\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizFinish;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, FormSection } from 'redux-form';\nimport { Link } from 'react-router-dom';\n\nimport { fetchShuffledQuiz } from '../../actions';\nimport QuizFinish from './QuizFinish';\nimport '../../styles/quizStart.css';\n\nclass QuizStart extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.userScore = 0;\n        this.state = {\n            quizFinished: false,\n            userAnswers: null,\n            currentNum: 0\n        }\n    }\n\n    componentDidMount() {\n        const { quizId } = this.props.match.params;\n        this.props.fetchShuffledQuiz(quizId);\n    }\n\n    onSubmit = formValues => {\n        this.setState({ quizFinished: true, userAnswers: formValues });\n    }\n\n    renderCheckboxInput({ input, id, name, type, value }) {\n        return (\n            <input {...input}\n                id={id}\n                name={name}\n                type={type}\n                value={input.value === '' ? false : input.value}/>\n        );\n    }\n\n    renderField ({ input, label, type, meta: { touched, error } }) {\n        return <input {...input}\n            type={type}\n            placeholder={label}\n            autoComplete=\"off\"\n        />\n    }\n\n    renderOptions(type, options) {\n        \n        switch (type) {\n            case 'multiplechoice':\n                return options.map((option, index) => {\n                    console.log(option);\n                    return (\n                        <div className=\"option-container\" key={index}>\n                            <Field\n                                id={option}\n                                type=\"checkbox\"\n                                name={option}\n                                component={this.renderCheckboxInput}\n                            />\n                            <label htmlFor={option}>{option}\n                            </label>\n                        </div>\n                    )\n                })\n            case 'patternmatch':\n                return (\n                    <Field\n                        name={`userAnswer`}\n                        component={this.renderField}\n                        label=\"Answer:\"\n                    />\n                )\n            default:\n                return <></>\n        }\n    }\n\n    renderItem() {\n        const item = this.props.quiz.items[this.state.currentNum]\n        return (\n            <>\n                <h3 className=\"ui header\">\n                    Question {this.state.currentNum + 1}: \n                </h3>\n                <h1 className=\"ui header question-header\">{item.question}</h1>\n                <div className=\"ui divider\"></div>\n                <FormSection name={`item[${this.state.currentNum}].userAnswer`}>\n                    {this.renderOptions(item.optionType, item.options)}\n                </FormSection>\n            </>\n        )\n    }\n\n    renderActionButtons() {\n        if (this.props.quiz.items.length === this.state.currentNum + 1) {\n            return (\n                <div className=\"ui green button\" onClick = { this.props.handleSubmit(this.onSubmit) } >\n                    <div className=\"visible content\">Finish Quiz</div>\n                </div >\n            )\n        } else {\n            return (\n                <div className=\"ui animated green button\" onClick={() => this.setState({ currentNum: this.state.currentNum + 1 })}>\n                    <div className=\"visible content\">Next Question</div>\n                    <div className=\"hidden content\">\n                        <i className=\"right arrow icon\"></i>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    renderEndScreenAction() {\n        return <Link to=\"/quizlist\" className=\"ui button\">\n            Back to Quiz List\n                    </Link>\n    }\n\n    render() {\n        // Loading screen\n        if (!this.props.quiz) {\n            return (\n                <div className=\"ui placeholder loading-container\">\n                    <div className=\"image header\">\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                    </div>\n                    <div className=\"paragraph\">\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                    </div>\n                </div>\n            );\n            // Game proper\n        } else if (!this.state.quizFinished) {\n            return (\n                <div className=\"quizStart-container\">\n                    <div className=\"ui clearing segment\">\n                        <h1 className=\"ui header\">{this.props.quiz.quizName}</h1>\n                    </div>\n                    <div className=\"ui segment\" id=\"item-container\">\n                        {this.renderItem()}\n                        {this.renderActionButtons()}\n                    </div>\n                </div>\n            );\n            // End Screen and Quiz Summary\n        } else if (this.state.quizFinished) {\n            return (\n                <div className=\"ui container segment quizFinish-container\">\n                    <QuizFinish\n                        quiz={this.props.quiz}\n                        userAnswers={this.state.userAnswers}\n                        actions={this.renderEndScreenAction()}\n                    />\n                </div>\n            )\n        }\n\n\n    }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return { quiz: state.quiz[ownProps.match.params.quizId] };\n};\n\nconst form = reduxForm({\n    form: 'userAnswers'\n})(QuizStart);\n\nexport default connect(mapStateToProps, { fetchShuffledQuiz })(form);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchQuiz, deleteQuiz } from '../../actions';\n\nclass QuizDelete extends React.Component {\n\n    onClickDelete(id) {\n        this.props.deleteQuiz(id)\n    }\n\n    componentDidMount() {\n        this.props.fetchQuiz(this.props.match.params.quizId);\n    }\n\n    renderActions() {\n        const { quizId } = this.props.match.params;\n        return (\n            <>\n                <button onClick={() => this.props.deleteQuiz(quizId)} className=\"ui button negative\">Delete</button>\n                <Link to=\"/quizlist\" className=\"ui button\">Cancel</Link>\n            </>\n        );\n    }\n\n    renderContent() {\n        if (!this.props.quiz) {\n            return 'Are you sure you want to delete this quiz?'\n        } else {\n            return `Are you sure you want to delete ${this.props.quiz.quizName}`\n        }\n    }\n    render() {\n        return (\n            <Modal\n                title=\"Delete Quiz\"\n                visibility={true}\n                content={this.renderContent()}\n                actions={this.renderActions()}\n                onDismiss={() => history.push('/quizlist')}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { quiz: state.quiz[ownProps.match.params.id] }\n};\n\nexport default connect(mapStateToProps, { fetchQuiz, deleteQuiz })(QuizDelete);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { fetchQuiz, editQuiz } from '../../actions';\nimport CreateManualQuizForm from '../manualQuizForm/CreateManualQuizForm';\n\nclass QuizEdit extends React.Component {\n\n    componentDidMount() {\n        const { quizId } = this.props.match.params;\n        this.props.fetchQuiz(quizId, true);\n    }\n\n    submitQuizBody(formValues) {\n        for (let index = 0; index < formValues.items.length; index++) {\n            formValues.items[index].answer = formValues.items[index].options[0];\n        }\n        this.props.editQuiz(this.props.match.params.quizId, formValues);\n    }\n\n    onSubmit = formValues => {\n        this.submitQuizBody(formValues);\n    }\n\n    renderFormActions() {\n        return (\n            <div className=\"ui right floated buttons\">\n                <button type=\"submit\" className=\"ui green button\">Save</button>\n                <div className=\"or\"></div>\n                <Link to=\"/quizlist\" className=\"ui button\">\n                    Discard\n                </Link>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.props.quiz) {\n            return (\n                <>\n                    <CreateManualQuizForm actions={this.renderFormActions()} quiz={this.props.quiz} quizId={this.props.match.params.quizId}/>\n                </>\n            )\n        } else {\n            return <div> Loading... </div>\n        }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        quiz: state.quiz[ownProps.match.params.quizId]\n    };\n};\n\nexport default connect(mapStateToProps, { fetchQuiz, editQuiz })(QuizEdit);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\n\n    <Route\n        {...rest}\n        render={props =>\n            ((authed || localStorage.getItem(\"token\"))\n                ? <Component {...props} />\n                : <Redirect to=\"/login\" />)\n        }\n    />\n);\n\nexport default PrivateRoute;","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport history from '../history';\nimport NavBar from './NavBar';\nimport SideBar from './SideBar';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport QuizList from './pages/QuizList';\nimport QuizCreate from './pages/QuizCreate';\nimport QuizStart from './pages/QuizStart';\nimport QuizDelete from './pages/QuizDelete';\nimport QuizEdit from './pages/QuizEdit';\nimport { getUserProfile } from '../actions';\n\nimport PrivateRoute from '../components/PrivateRoute';\nimport '../styles/app.css';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // When sidebar is default to true, sidebar will be displayed in the login page\n            // When sidebar is default to false, sidebar will not be displayed when logged in and refreshing the webpage\n            sideBarActive: localStorage.getItem(\"token\") ? true : false\n        };\n    }\n\n    componentDidMount = () => {\n        this.props.getUserProfile();\n    }\n\n    toggleShowHide = () => {\n        this.setState(state => ({ sideBarActive: !state.sideBarActive }));\n    }\n\n    render() {\n        const login = (props) => {\n            return (\n                <Login\n                    sideBarToggle={this.toggleShowHide.bind(this)}\n                    {...props}\n                />\n            );\n        }\n        return (\n            <>\n                <Router history={history}>\n                    <NavBar sideBarToggle={this.toggleShowHide} sideBarActive={this.state.sideBarActive} isSignedIn={this.props.isSignedIn} />\n                    <SideBar sideBarToggle={this.toggleShowHide} sideBarActive={this.state.sideBarActive} />\n                    \n                    <div className={this.state.sideBarActive ? \"appMain sideBarActive\" : \"appMain\"}>\n                        <Route path=\"/login\" exact component={login} />\n                        <PrivateRoute path=\"/\" exact component={Home} authed={this.props.currentUser} />\n                        <PrivateRoute path=\"/quizlist\" exact component={QuizList} authed={this.props.currentUser} />\n                        <PrivateRoute path=\"/quiz/create/:method\" exact component={QuizCreate} authed={this.props.currentUser} />\n                        <PrivateRoute path=\"/quiz/start/:quizId\" exact component={QuizStart} authed={this.props.currentUser} />\n                        <PrivateRoute path=\"/quiz/delete/:quizId\" exact component={QuizDelete} authed={this.props.currentUser} />\n                        <PrivateRoute path=\"/quiz/edit/:quizId\" exact component={QuizEdit} authed={this.props.currentUser} />\n                    </div>\n                </Router>\n            </>\n        )\n    }\n};\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.auth.currentUser,\n        isSignedIn: state.auth.isSignedIn\n    }\n};\n\nexport default connect(mapStateToProps, { getUserProfile })(App);","import { CREATE_USER_SUCCESS, SIGN_IN, SIGN_OUT } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null,\n    currentUser: null\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CREATE_USER_SUCCESS:\n            return {};\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, userId: action.payload._id, currentUser: action.payload };\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, userId: null, currentUser: null };\n        default:\n            return state;\n    }\n};","export const shuffleArray = function (arr) {\n    var temp, j, n = arr.length;\n    while (--n > 0) {\n        j = Math.floor(Math.random() * (n + 1));\n        temp = arr[j];\n        arr[j] = arr[n];\n        arr[n] = temp;\n    }\n    return arr;\n};","// Error reducer that observes any errors 'happening' in the app and registers them in the error state.\n\nimport { HIDE_ERROR } from '../actions/types';\n\nconst INITIAL_STATE = {\n    error: null,\n    isOpen: false\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    const { error } = action;\n\n    if (error) {\n        return {\n            error: error,\n            isOpen: true\n        }\n    } else if (action.type === HIDE_ERROR) {\n        return {\n            error: null,\n            isOpen: false\n        }\n    }\n\n    return state;\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport authReducer from './authReducer';\nimport quizReducer from './quizReducer';\nimport errorReducer from './errorReducer';\n\nimport { CREATE_USER_SUCCESS } from '../actions/types';\n\n\nexport default combineReducers({\n    form: formReducer.plugin({\n        registrationForm: (state, action) => {\n            switch (action.type) {\n                case CREATE_USER_SUCCESS:\n                    return undefined;\n                default:\n                    return state;\n            }\n        }\n    }),\n    auth: authReducer,\n    quiz: quizReducer,\n    error: errorReducer\n});","import _ from 'lodash';\nimport { shuffleArray } from '../helpers/shuffleArray';\nimport {\n    CREATE_QUIZ,\n    FETCH_QUIZZES,\n    FETCH_QUIZ,\n    EDIT_QUIZ,\n    DELETE_QUIZ,\n    FETCH_SHUFFLED_QUIZ\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_QUIZ:\n            return { ...state, [action.payload._id]: action.payload }\n        case FETCH_QUIZ:\n            return { ...state, [action.payload._id]: action.payload }\n        case FETCH_SHUFFLED_QUIZ:\n            for (const item of action.payload.items) {\n                shuffleArray(item.options);\n            }\n            shuffleArray(action.payload.items)\n            return { ...state, [action.payload._id]: action.payload }\n        case FETCH_QUIZZES:\n            //Getting a list of many records\n            return { ...state, ..._.mapKeys(action.payload, '_id') }\n        case EDIT_QUIZ:\n            return { ...state, [action.payload._id]: action.payload }\n        case DELETE_QUIZ:\n            return _.omit(state, action.payload)\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nimport './styles/index.css'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.querySelector('#root')\n);"],"sourceRoot":""}